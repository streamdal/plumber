on: pull_request
name: Pull Request
jobs:
  buildtest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Get latest release
        id: latest_release
        run: |
          echo "::set-output name=tag_name::$(curl --silent --location --header 'Accept: application/json' 'https://api.github.com/repos/streamdal/embedded-console/releases/latest' | jq -r '.tag_name')"

      - name: Download latest release
        run: |
          curl https://github.com/streamdal/embedded-console/archive/${{ steps.latest_release.outputs.tag_name }}.zip -o release.zip
      - name: List files
        run: |
          ls -la

      - name: Unzip Release
        run: unzip -q $GITHUB_WORKSPACE/release.zip -d api/assets/
      - name: check files
        run: ls -la api/assets/
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '~1.18' # The Go version to download (if necessary) and use.
      - name: Start up dependencies
        run: docker-compose up -d rabbitmq kafka mosquitto-ssl mosquitto activemq redis pulsar
      - name: Wait for dependencies to start up
        uses: jakejarvis/wait-action@master
        with:
          time: '30s'
#      - name: Install Code Climate reporter
#        run: |
#          sudo curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
#          sudo chmod +x ./cc-test-reporter
#          ./cc-test-reporter before-build
#      - name: Test
#        run: |
#          make test/coverage
#      - name: Upload coverage information
#        run: |
#          GIT_BRANCH="${GITHUB_HEAD_REF}" ./cc-test-reporter after-build -p github.com/streamdal/plumber -r ${{ secrets.CC_TEST_REPORTER_ID }}

  functional:
    name: Run functional tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '~1.18' # The Go version to download (if necessary) and use.
      - name: Start up dependencies
        run: docker-compose up -d
      - name: Wait for dependencies to start up
        uses: jakejarvis/wait-action@master
        with:
          time: '60s'
      - name: Test
        env:
          AWS_REGION: us-west-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TEST_API_TOKEN: ${{ secrets.TEST_API_TOKEN }}
          TEST_COLLECTION_TOKEN: ${{ secrets.TEST_COLLECTION_TOKEN }}
        run: |
          go run main.go server --auth-token "streamdal" &
          sleep 5
          go test --tags=functional
