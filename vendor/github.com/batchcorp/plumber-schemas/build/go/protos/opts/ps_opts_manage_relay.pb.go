// Code generated by protoc-gen-go. DO NOT EDIT.
// source: opts/ps_opts_manage_relay.proto

package opts

import (
	fmt "fmt"
	args "github.com/batchcorp/plumber-schemas/build/go/protos/args"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRelayOptions struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRelayOptions) Reset()         { *m = GetRelayOptions{} }
func (m *GetRelayOptions) String() string { return proto.CompactTextString(m) }
func (*GetRelayOptions) ProtoMessage()    {}
func (*GetRelayOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_86dbec1f9d2837a2, []int{0}
}

func (m *GetRelayOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRelayOptions.Unmarshal(m, b)
}
func (m *GetRelayOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRelayOptions.Marshal(b, m, deterministic)
}
func (m *GetRelayOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRelayOptions.Merge(m, src)
}
func (m *GetRelayOptions) XXX_Size() int {
	return xxx_messageInfo_GetRelayOptions.Size(m)
}
func (m *GetRelayOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRelayOptions.DiscardUnknown(m)
}

var xxx_messageInfo_GetRelayOptions proto.InternalMessageInfo

func (m *GetRelayOptions) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreateRelayOptions struct {
	ConnectionId                string                        `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	CollectionToken             string                        `protobuf:"bytes,2,opt,name=collection_token,json=collectionToken,proto3" json:"collection_token,omitempty"`
	BatchSize                   int32                         `protobuf:"varint,3,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	BatchMaxRetry               int32                         `protobuf:"varint,4,opt,name=batch_max_retry,json=batchMaxRetry,proto3" json:"batch_max_retry,omitempty"`
	NumWorkers                  int32                         `protobuf:"varint,5,opt,name=num_workers,json=numWorkers,proto3" json:"num_workers,omitempty"`
	StreamdalGrpcAddress        string                        `protobuf:"bytes,6,opt,name=streamdal_grpc_address,json=streamdalGrpcAddress,proto3" json:"streamdal_grpc_address,omitempty"`
	StreamdalGrpcDisableTls     bool                          `protobuf:"varint,7,opt,name=streamdal_grpc_disable_tls,json=streamdalGrpcDisableTls,proto3" json:"streamdal_grpc_disable_tls,omitempty"`
	StreamdalGrpcTimeoutSeconds int32                         `protobuf:"varint,8,opt,name=streamdal_grpc_timeout_seconds,json=streamdalGrpcTimeoutSeconds,proto3" json:"streamdal_grpc_timeout_seconds,omitempty"`
	DeadLetter                  bool                          `protobuf:"varint,9,opt,name=dead_letter,json=deadLetter,proto3" json:"dead_letter,omitempty"`
	Kafka                       *args.KafkaSourceArgs         `protobuf:"bytes,100,opt,name=kafka,proto3" json:"kafka,omitempty"`
	AwsSqs                      *args.AWSSQSSourceArgs        `protobuf:"bytes,101,opt,name=aws_sqs,json=awsSqs,proto3" json:"aws_sqs,omitempty"`
	Mongo                       *args.MongoReadArgs           `protobuf:"bytes,102,opt,name=mongo,proto3" json:"mongo,omitempty"`
	Nsq                         *args.NSQReadArgs             `protobuf:"bytes,103,opt,name=nsq,proto3" json:"nsq,omitempty"`
	Rabbit                      *args.RabbitReadArgs          `protobuf:"bytes,104,opt,name=rabbit,proto3" json:"rabbit,omitempty"`
	Mqtt                        *args.MQTTReadArgs            `protobuf:"bytes,105,opt,name=mqtt,proto3" json:"mqtt,omitempty"`
	AzureServiceBus             *args.AzureServiceBusReadArgs `protobuf:"bytes,106,opt,name=azure_service_bus,json=azureServiceBus,proto3" json:"azure_service_bus,omitempty"`
	GcpPubsub                   *args.GCPPubSubReadArgs       `protobuf:"bytes,107,opt,name=gcp_pubsub,json=gcpPubsub,proto3" json:"gcp_pubsub,omitempty"`
	KubemqQueue                 *args.KubeMQQueueReadArgs     `protobuf:"bytes,108,opt,name=kubemq_queue,json=kubemqQueue,proto3" json:"kubemq_queue,omitempty"`
	RedisPubsub                 *args.RedisPubSubReadArgs     `protobuf:"bytes,109,opt,name=redis_pubsub,json=redisPubsub,proto3" json:"redis_pubsub,omitempty"`
	RedisStreams                *args.RedisStreamsReadArgs    `protobuf:"bytes,111,opt,name=redis_streams,json=redisStreams,proto3" json:"redis_streams,omitempty"`
	Postgres                    *args.PostgresReadArgs        `protobuf:"bytes,112,opt,name=postgres,proto3" json:"postgres,omitempty"`
	Nats                        *args.NatsReadArgs            `protobuf:"bytes,113,opt,name=nats,proto3" json:"nats,omitempty"`
	NatsStreaming               *args.NatsStreamingReadArgs   `protobuf:"bytes,114,opt,name=nats_streaming,json=natsStreaming,proto3" json:"nats_streaming,omitempty"`
	NatsJetstream               *args.NatsJetstreamReadArgs   `protobuf:"bytes,115,opt,name=nats_jetstream,json=natsJetstream,proto3" json:"nats_jetstream,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                      `json:"-"`
	XXX_unrecognized            []byte                        `json:"-"`
	XXX_sizecache               int32                         `json:"-"`
}

func (m *CreateRelayOptions) Reset()         { *m = CreateRelayOptions{} }
func (m *CreateRelayOptions) String() string { return proto.CompactTextString(m) }
func (*CreateRelayOptions) ProtoMessage()    {}
func (*CreateRelayOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_86dbec1f9d2837a2, []int{1}
}

func (m *CreateRelayOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRelayOptions.Unmarshal(m, b)
}
func (m *CreateRelayOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRelayOptions.Marshal(b, m, deterministic)
}
func (m *CreateRelayOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRelayOptions.Merge(m, src)
}
func (m *CreateRelayOptions) XXX_Size() int {
	return xxx_messageInfo_CreateRelayOptions.Size(m)
}
func (m *CreateRelayOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRelayOptions.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRelayOptions proto.InternalMessageInfo

func (m *CreateRelayOptions) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

func (m *CreateRelayOptions) GetCollectionToken() string {
	if m != nil {
		return m.CollectionToken
	}
	return ""
}

func (m *CreateRelayOptions) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

func (m *CreateRelayOptions) GetBatchMaxRetry() int32 {
	if m != nil {
		return m.BatchMaxRetry
	}
	return 0
}

func (m *CreateRelayOptions) GetNumWorkers() int32 {
	if m != nil {
		return m.NumWorkers
	}
	return 0
}

func (m *CreateRelayOptions) GetStreamdalGrpcAddress() string {
	if m != nil {
		return m.StreamdalGrpcAddress
	}
	return ""
}

func (m *CreateRelayOptions) GetStreamdalGrpcDisableTls() bool {
	if m != nil {
		return m.StreamdalGrpcDisableTls
	}
	return false
}

func (m *CreateRelayOptions) GetStreamdalGrpcTimeoutSeconds() int32 {
	if m != nil {
		return m.StreamdalGrpcTimeoutSeconds
	}
	return 0
}

func (m *CreateRelayOptions) GetDeadLetter() bool {
	if m != nil {
		return m.DeadLetter
	}
	return false
}

func (m *CreateRelayOptions) GetKafka() *args.KafkaSourceArgs {
	if m != nil {
		return m.Kafka
	}
	return nil
}

func (m *CreateRelayOptions) GetAwsSqs() *args.AWSSQSSourceArgs {
	if m != nil {
		return m.AwsSqs
	}
	return nil
}

func (m *CreateRelayOptions) GetMongo() *args.MongoReadArgs {
	if m != nil {
		return m.Mongo
	}
	return nil
}

func (m *CreateRelayOptions) GetNsq() *args.NSQReadArgs {
	if m != nil {
		return m.Nsq
	}
	return nil
}

func (m *CreateRelayOptions) GetRabbit() *args.RabbitReadArgs {
	if m != nil {
		return m.Rabbit
	}
	return nil
}

func (m *CreateRelayOptions) GetMqtt() *args.MQTTReadArgs {
	if m != nil {
		return m.Mqtt
	}
	return nil
}

func (m *CreateRelayOptions) GetAzureServiceBus() *args.AzureServiceBusReadArgs {
	if m != nil {
		return m.AzureServiceBus
	}
	return nil
}

func (m *CreateRelayOptions) GetGcpPubsub() *args.GCPPubSubReadArgs {
	if m != nil {
		return m.GcpPubsub
	}
	return nil
}

func (m *CreateRelayOptions) GetKubemqQueue() *args.KubeMQQueueReadArgs {
	if m != nil {
		return m.KubemqQueue
	}
	return nil
}

func (m *CreateRelayOptions) GetRedisPubsub() *args.RedisPubSubReadArgs {
	if m != nil {
		return m.RedisPubsub
	}
	return nil
}

func (m *CreateRelayOptions) GetRedisStreams() *args.RedisStreamsReadArgs {
	if m != nil {
		return m.RedisStreams
	}
	return nil
}

func (m *CreateRelayOptions) GetPostgres() *args.PostgresReadArgs {
	if m != nil {
		return m.Postgres
	}
	return nil
}

func (m *CreateRelayOptions) GetNats() *args.NatsReadArgs {
	if m != nil {
		return m.Nats
	}
	return nil
}

func (m *CreateRelayOptions) GetNatsStreaming() *args.NatsStreamingReadArgs {
	if m != nil {
		return m.NatsStreaming
	}
	return nil
}

func (m *CreateRelayOptions) GetNatsJetstream() *args.NatsJetstreamReadArgs {
	if m != nil {
		return m.NatsJetstream
	}
	return nil
}

type DeleteRelayOptions struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRelayOptions) Reset()         { *m = DeleteRelayOptions{} }
func (m *DeleteRelayOptions) String() string { return proto.CompactTextString(m) }
func (*DeleteRelayOptions) ProtoMessage()    {}
func (*DeleteRelayOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_86dbec1f9d2837a2, []int{2}
}

func (m *DeleteRelayOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRelayOptions.Unmarshal(m, b)
}
func (m *DeleteRelayOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRelayOptions.Marshal(b, m, deterministic)
}
func (m *DeleteRelayOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRelayOptions.Merge(m, src)
}
func (m *DeleteRelayOptions) XXX_Size() int {
	return xxx_messageInfo_DeleteRelayOptions.Size(m)
}
func (m *DeleteRelayOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRelayOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRelayOptions proto.InternalMessageInfo

func (m *DeleteRelayOptions) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StopRelayOptions struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRelayOptions) Reset()         { *m = StopRelayOptions{} }
func (m *StopRelayOptions) String() string { return proto.CompactTextString(m) }
func (*StopRelayOptions) ProtoMessage()    {}
func (*StopRelayOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_86dbec1f9d2837a2, []int{3}
}

func (m *StopRelayOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRelayOptions.Unmarshal(m, b)
}
func (m *StopRelayOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRelayOptions.Marshal(b, m, deterministic)
}
func (m *StopRelayOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRelayOptions.Merge(m, src)
}
func (m *StopRelayOptions) XXX_Size() int {
	return xxx_messageInfo_StopRelayOptions.Size(m)
}
func (m *StopRelayOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRelayOptions.DiscardUnknown(m)
}

var xxx_messageInfo_StopRelayOptions proto.InternalMessageInfo

func (m *StopRelayOptions) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ResumeRelayOptions struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResumeRelayOptions) Reset()         { *m = ResumeRelayOptions{} }
func (m *ResumeRelayOptions) String() string { return proto.CompactTextString(m) }
func (*ResumeRelayOptions) ProtoMessage()    {}
func (*ResumeRelayOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_86dbec1f9d2837a2, []int{4}
}

func (m *ResumeRelayOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeRelayOptions.Unmarshal(m, b)
}
func (m *ResumeRelayOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeRelayOptions.Marshal(b, m, deterministic)
}
func (m *ResumeRelayOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeRelayOptions.Merge(m, src)
}
func (m *ResumeRelayOptions) XXX_Size() int {
	return xxx_messageInfo_ResumeRelayOptions.Size(m)
}
func (m *ResumeRelayOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeRelayOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeRelayOptions proto.InternalMessageInfo

func (m *ResumeRelayOptions) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*GetRelayOptions)(nil), "protos.opts.GetRelayOptions")
	proto.RegisterType((*CreateRelayOptions)(nil), "protos.opts.CreateRelayOptions")
	proto.RegisterType((*DeleteRelayOptions)(nil), "protos.opts.DeleteRelayOptions")
	proto.RegisterType((*StopRelayOptions)(nil), "protos.opts.StopRelayOptions")
	proto.RegisterType((*ResumeRelayOptions)(nil), "protos.opts.ResumeRelayOptions")
}

func init() { proto.RegisterFile("opts/ps_opts_manage_relay.proto", fileDescriptor_86dbec1f9d2837a2) }

var fileDescriptor_86dbec1f9d2837a2 = []byte{
	// 854 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x95, 0xdf, 0x6e, 0xdb, 0x36,
	0x18, 0xc5, 0xe1, 0xb4, 0x49, 0x13, 0xba, 0x69, 0x3a, 0x62, 0x68, 0x59, 0x67, 0x69, 0x1c, 0x2f,
	0x18, 0xb2, 0x01, 0xb5, 0x87, 0x76, 0x18, 0x50, 0x14, 0xbb, 0x48, 0x53, 0x2c, 0xe8, 0xb6, 0x74,
	0xb6, 0x64, 0xa0, 0xc0, 0x6e, 0x08, 0x4a, 0xfa, 0xaa, 0xa8, 0x96, 0x44, 0x89, 0x7f, 0x96, 0x36,
	0x0f, 0xb6, 0xe7, 0x1b, 0x48, 0xca, 0xb2, 0x69, 0xbb, 0xbd, 0x12, 0x7c, 0xce, 0xef, 0x1c, 0xd1,
	0xa4, 0xf9, 0x19, 0x1d, 0xf3, 0x4a, 0xc9, 0x51, 0x25, 0xa9, 0x79, 0xd2, 0x82, 0x95, 0x2c, 0x05,
	0x2a, 0x20, 0x67, 0x9f, 0x87, 0x95, 0xe0, 0x8a, 0xe3, 0xae, 0x7d, 0xc8, 0xa1, 0xf1, 0x7b, 0x3d,
	0x26, 0x52, 0x4b, 0x9b, 0x27, 0x65, 0x37, 0x92, 0xca, 0x5a, 0x3a, 0xb0, 0x77, 0xea, 0x7b, 0xb7,
	0x5a, 0x00, 0x95, 0x20, 0xfe, 0xcd, 0x62, 0xa0, 0x91, 0x9e, 0x53, 0x47, 0x1e, 0x95, 0xc6, 0x15,
	0xad, 0x74, 0x24, 0x75, 0xd4, 0xd8, 0xc4, 0xb3, 0x67, 0xec, 0xc3, 0x8c, 0x35, 0xce, 0xb1, 0xef,
	0xe8, 0x08, 0x8a, 0x9a, 0xd6, 0x1a, 0x34, 0x6c, 0x8c, 0x16, 0xbc, 0x4c, 0x79, 0xe3, 0x3c, 0xf6,
	0x9d, 0x5a, 0xa9, 0x8d, 0x46, 0xc9, 0xd4, 0x7c, 0x95, 0x27, 0x6b, 0x06, 0xfd, 0x08, 0x4a, 0x2a,
	0x01, 0xac, 0xf8, 0x32, 0xe2, 0xfc, 0xac, 0x4c, 0x1b, 0xe4, 0x91, 0x8f, 0xc8, 0xba, 0xd1, 0x0f,
	0x3d, 0xbd, 0xe2, 0x52, 0xa5, 0x02, 0xe6, 0xaf, 0x7e, 0xe2, 0x99, 0x82, 0x45, 0x51, 0xa6, 0x36,
	0x6e, 0x81, 0x80, 0x24, 0x93, 0xfe, 0xee, 0xf5, 0x37, 0x00, 0x6e, 0x51, 0x4d, 0xfb, 0xe0, 0x04,
	0x1d, 0x5c, 0x82, 0x0a, 0xcc, 0xf9, 0xfe, 0x5d, 0xa9, 0x8c, 0x97, 0x12, 0x3f, 0x40, 0x5b, 0x59,
	0x42, 0x3a, 0xfd, 0xce, 0xd9, 0x5e, 0xb0, 0x95, 0x25, 0x83, 0xff, 0x10, 0xc2, 0x17, 0x02, 0x98,
	0x02, 0x0f, 0xfb, 0x1e, 0xed, 0xc7, 0xbc, 0x2c, 0x21, 0x36, 0x1f, 0x69, 0x9b, 0xb8, 0xbf, 0x10,
	0xdf, 0x26, 0xf8, 0x47, 0xf4, 0x30, 0xe6, 0x79, 0xde, 0x40, 0x8a, 0xcf, 0xa0, 0x24, 0x5b, 0x96,
	0x3b, 0x58, 0xe8, 0x53, 0x23, 0xe3, 0x23, 0x84, 0x22, 0xa6, 0xe2, 0x6b, 0x2a, 0xb3, 0x5b, 0x20,
	0x77, 0xfa, 0x9d, 0xb3, 0xed, 0x60, 0xcf, 0x2a, 0x61, 0x76, 0x0b, 0xf8, 0x07, 0x74, 0xe0, 0xec,
	0x82, 0x7d, 0xa2, 0x02, 0x94, 0xf8, 0x4c, 0xee, 0x5a, 0x66, 0xdf, 0xca, 0x57, 0xec, 0x53, 0x60,
	0x44, 0x7c, 0x8c, 0xba, 0xa5, 0x2e, 0xe8, 0x0d, 0x17, 0x33, 0x10, 0x92, 0x6c, 0x5b, 0x06, 0x95,
	0xba, 0x78, 0xef, 0x14, 0xfc, 0x0b, 0x7a, 0xe4, 0xb6, 0x20, 0x61, 0x39, 0x4d, 0x45, 0x15, 0x53,
	0x96, 0x24, 0x02, 0xa4, 0x24, 0x3b, 0x76, 0x61, 0xdf, 0xb6, 0xee, 0xa5, 0xa8, 0xe2, 0x73, 0xe7,
	0xe1, 0x57, 0xa8, 0xb7, 0x92, 0x4a, 0x32, 0xc9, 0xa2, 0x1c, 0xa8, 0xca, 0x25, 0xb9, 0xd7, 0xef,
	0x9c, 0xed, 0x06, 0x8f, 0xbd, 0xe4, 0x1b, 0xe7, 0x4f, 0x73, 0x89, 0x2f, 0xd0, 0xd3, 0x95, 0xb0,
	0xca, 0x0a, 0xe0, 0x5a, 0x51, 0x09, 0x31, 0x2f, 0x13, 0x49, 0x76, 0xed, 0x32, 0x0f, 0xbd, 0x82,
	0xa9, 0x63, 0x42, 0x87, 0x98, 0x2f, 0x96, 0x00, 0x4b, 0x68, 0x0e, 0x4a, 0x81, 0x20, 0x7b, 0xf6,
	0x95, 0xc8, 0x48, 0x7f, 0x59, 0x05, 0x3f, 0x47, 0xdb, 0xf6, 0x7e, 0x90, 0xa4, 0xdf, 0x39, 0xeb,
	0x3e, 0xff, 0x6e, 0xd8, 0x5c, 0x54, 0x73, 0xf6, 0xc3, 0x3f, 0x8d, 0x13, 0x72, 0x2d, 0x62, 0x38,
	0x17, 0xa9, 0x0c, 0x1c, 0x8a, 0x7f, 0x45, 0xf7, 0x9a, 0x4b, 0x4b, 0xc0, 0xa6, 0x8e, 0xbc, 0xd4,
	0xf9, 0xfb, 0x30, 0x9c, 0x84, 0x4b, 0xb1, 0x1d, 0x76, 0x23, 0xc3, 0x5a, 0xe2, 0x9f, 0xd1, 0xb6,
	0xbd, 0x50, 0xe4, 0x83, 0x4d, 0xf5, 0xbc, 0xd4, 0x95, 0x71, 0x02, 0x60, 0x89, 0x7b, 0x93, 0x05,
	0xf1, 0x4f, 0xe8, 0x4e, 0x29, 0x6b, 0x92, 0x5a, 0x9e, 0x78, 0xfc, 0xbb, 0x70, 0xd2, 0xd2, 0x06,
	0xc2, 0x2f, 0xd0, 0x8e, 0xfb, 0x9d, 0x93, 0x6b, 0x8b, 0x1f, 0x7a, 0x78, 0x60, 0xad, 0x36, 0xd1,
	0xa0, 0xf8, 0x19, 0xba, 0x6b, 0x6e, 0x32, 0xc9, 0x6c, 0xe4, 0x89, 0xbf, 0xa2, 0xc9, 0x74, 0xda,
	0x06, 0x2c, 0x86, 0xc7, 0xe8, 0x9b, 0xb5, 0x91, 0x44, 0x3e, 0xda, 0xec, 0xa9, 0xbf, 0x07, 0x86,
	0x0a, 0x1d, 0xf4, 0x5a, 0xcb, 0xb6, 0xe6, 0x80, 0xf9, 0x06, 0xfe, 0x0d, 0xa1, 0xc5, 0xf8, 0x22,
	0x33, 0x5b, 0xf5, 0xd4, 0xab, 0xba, 0xbc, 0x18, 0x8f, 0x75, 0x14, 0xea, 0xa8, 0x2d, 0xd9, 0x4b,
	0xe3, 0x6a, 0x6c, 0x03, 0xf8, 0x02, 0xdd, 0x5f, 0x1e, 0x62, 0x24, 0xb7, 0x05, 0x7d, 0xff, 0x14,
	0x75, 0x04, 0x57, 0x93, 0x89, 0xf1, 0xdb, 0x8a, 0xae, 0x4b, 0x59, 0xd1, 0x94, 0x2c, 0x8f, 0x01,
	0x52, 0x6c, 0x28, 0x09, 0x0c, 0xb0, 0xb2, 0x8e, 0xae, 0x68, 0x44, 0xb3, 0x92, 0xdf, 0xd1, 0xbe,
	0x37, 0x2a, 0x08, 0xb7, 0x2d, 0x27, 0xeb, 0x2d, 0xa1, 0x03, 0xda, 0x1a, 0xf7, 0xf2, 0x46, 0xc5,
	0x2f, 0xd1, 0xee, 0x7c, 0x96, 0x91, 0x6a, 0xc3, 0xaf, 0x6b, 0xdc, 0x98, 0x6d, 0xbc, 0xc5, 0xcd,
	0x61, 0x9a, 0x09, 0x4a, 0xea, 0x0d, 0x87, 0xf9, 0x8e, 0xa9, 0x45, 0xc4, 0x62, 0xf8, 0x2d, 0x7a,
	0xe0, 0x0f, 0x5c, 0x22, 0x6c, 0x70, 0xb0, 0x16, 0x0c, 0xe7, 0x44, 0xdb, 0xb0, 0x5f, 0x2e, 0xcb,
	0x6d, 0x55, 0x3b, 0xde, 0x89, 0xfc, 0x42, 0xd5, 0x1f, 0x73, 0xc2, 0xaf, 0x6a, 0xe5, 0xc1, 0x29,
	0xc2, 0x6f, 0x20, 0x87, 0x95, 0xb9, 0xb9, 0x3a, 0x5e, 0x07, 0xe8, 0x61, 0xa8, 0x78, 0xf5, 0x55,
	0xe6, 0x14, 0xe1, 0x00, 0xa4, 0x2e, 0xbe, 0xda, 0xf4, 0xfa, 0xd5, 0x3f, 0x2f, 0xd3, 0x4c, 0x5d,
	0xeb, 0x68, 0x18, 0xf3, 0x62, 0x64, 0xc7, 0x62, 0xcc, 0x45, 0x35, 0xaa, 0x72, 0x5d, 0x44, 0x20,
	0x9e, 0xc9, 0xf8, 0x1a, 0x0a, 0x26, 0x47, 0x91, 0xce, 0xf2, 0x64, 0x94, 0xf2, 0x91, 0xfb, 0x46,
	0x23, 0xf3, 0x4f, 0x1e, 0xed, 0xd8, 0x0f, 0x2f, 0xfe, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x9e,
	0xfe, 0x7c, 0x00, 0x08, 0x00, 0x00,
}
