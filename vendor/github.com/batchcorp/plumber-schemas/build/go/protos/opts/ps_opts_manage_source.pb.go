// Code generated by protoc-gen-go. DO NOT EDIT.
// source: opts/ps_opts_manage_source.proto

package opts

import (
	fmt "fmt"
	args "github.com/batchcorp/plumber-schemas/build/go/protos/args"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateSourceOptions struct {
	// @gotags: kong:"help='ID of the connection to use',required"
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty" kong:"help='ID of the connection to use',required"`
	// @gotags: kong:"help='Friendly name for the source',required"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" kong:"help='Friendly name for the source',required"`
	// @gotags: kong:"help='Notes to attach to the source'"
	Notes string `protobuf:"bytes,3,opt,name=notes,proto3" json:"notes,omitempty" kong:"help='Notes to attach to the source'"`
	// @gotags: kong:"cmd,help='Apache Kafka'"
	Kafka *args.KafkaSourceArgs `protobuf:"bytes,100,opt,name=kafka,proto3" json:"kafka,omitempty" kong:"cmd,help='Apache Kafka'"`
	// @gotags: kong:"cmd,help='AWS Simple Queue System'"
	AwsSqs *args.AWSSQSSourceArgs `protobuf:"bytes,101,opt,name=aws_sqs,json=awsSqs,proto3" json:"aws_sqs,omitempty" kong:"cmd,help='AWS Simple Queue System'"`
	// @gotags: kong:"cmd,help='MongoDB (CDC)'"
	Mongo *args.MongoReadArgs `protobuf:"bytes,102,opt,name=mongo,proto3" json:"mongo,omitempty" kong:"cmd,help='MongoDB (CDC)'"`
	// @gotags: kong:"cmd,help='NSQ'"
	Nsq *args.NSQReadArgs `protobuf:"bytes,103,opt,name=nsq,proto3" json:"nsq,omitempty" kong:"cmd,help='NSQ'"`
	// @gotags: kong:"cmd,help='MQTT'"
	Rabbit *args.RabbitReadArgs `protobuf:"bytes,104,opt,name=rabbit,proto3" json:"rabbit,omitempty" kong:"cmd,help='MQTT'"`
	// @gotags: kong:"cmd,help='MQTT'"
	Mqtt *args.MQTTReadArgs `protobuf:"bytes,105,opt,name=mqtt,proto3" json:"mqtt,omitempty" kong:"cmd,help='MQTT'"`
	// @gotags: kong:"cmd,help='Azure Service Bus'"
	AzureServiceBus *args.AzureServiceBusReadArgs `protobuf:"bytes,106,opt,name=azure_service_bus,json=azureServiceBus,proto3" json:"azure_service_bus,omitempty" kong:"cmd,help='Azure Service Bus'"`
	// @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
	GcpPubsub *args.GCPPubSubReadArgs `protobuf:"bytes,107,opt,name=gcp_pubsub,json=gcpPubsub,proto3" json:"gcp_pubsub,omitempty" kong:"cmd,help='Google Cloud Platform Pub/Sub'"`
	// @gotags: kong:"cmd,help='KubeMQ Queue'"
	KubemqQueue *args.KubeMQQueueReadArgs `protobuf:"bytes,108,opt,name=kubemq_queue,json=kubemqQueue,proto3" json:"kubemq_queue,omitempty" kong:"cmd,help='KubeMQ Queue'"`
	// @gotags: kong:"cmd,help='Redis PubSub'"
	RedisPubsub *args.RedisPubSubReadArgs `protobuf:"bytes,109,opt,name=redis_pubsub,json=redisPubsub,proto3" json:"redis_pubsub,omitempty" kong:"cmd,help='Redis PubSub'"`
	// @gotags: kong:"cmd,help='Redis Streams'"
	RedisStreams *args.RedisStreamsReadArgs `protobuf:"bytes,111,opt,name=redis_streams,json=redisStreams,proto3" json:"redis_streams,omitempty" kong:"cmd,help='Redis Streams'"`
	// @gotags: kong:"cmd,help='PostgreSQL (CDC)'"
	Postgres *args.PostgresReadArgs `protobuf:"bytes,112,opt,name=postgres,proto3" json:"postgres,omitempty" kong:"cmd,help='PostgreSQL (CDC)'"`
	// @gotags: kong:"cmd,help='NATS'"
	Nats *args.NatsReadArgs `protobuf:"bytes,113,opt,name=nats,proto3" json:"nats,omitempty" kong:"cmd,help='NATS'"`
	// @gotags: kong:"cmd,help='NATS Streaming'"
	NatsStreaming *args.NatsStreamingReadArgs `protobuf:"bytes,114,opt,name=nats_streaming,json=natsStreaming,proto3" json:"nats_streaming,omitempty" kong:"cmd,help='NATS Streaming'"`
	// @gotags: kong:"cmd,help='NATS JetStream'"
	NatsJetstream        *args.NatsJetstreamReadArgs `protobuf:"bytes,115,opt,name=nats_jetstream,json=natsJetstream,proto3" json:"nats_jetstream,omitempty" kong:"cmd,help='NATS JetStream'"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CreateSourceOptions) Reset()         { *m = CreateSourceOptions{} }
func (m *CreateSourceOptions) String() string { return proto.CompactTextString(m) }
func (*CreateSourceOptions) ProtoMessage()    {}
func (*CreateSourceOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa4270864c1a131f, []int{0}
}

func (m *CreateSourceOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSourceOptions.Unmarshal(m, b)
}
func (m *CreateSourceOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSourceOptions.Marshal(b, m, deterministic)
}
func (m *CreateSourceOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSourceOptions.Merge(m, src)
}
func (m *CreateSourceOptions) XXX_Size() int {
	return xxx_messageInfo_CreateSourceOptions.Size(m)
}
func (m *CreateSourceOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSourceOptions.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSourceOptions proto.InternalMessageInfo

func (m *CreateSourceOptions) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

func (m *CreateSourceOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateSourceOptions) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *CreateSourceOptions) GetKafka() *args.KafkaSourceArgs {
	if m != nil {
		return m.Kafka
	}
	return nil
}

func (m *CreateSourceOptions) GetAwsSqs() *args.AWSSQSSourceArgs {
	if m != nil {
		return m.AwsSqs
	}
	return nil
}

func (m *CreateSourceOptions) GetMongo() *args.MongoReadArgs {
	if m != nil {
		return m.Mongo
	}
	return nil
}

func (m *CreateSourceOptions) GetNsq() *args.NSQReadArgs {
	if m != nil {
		return m.Nsq
	}
	return nil
}

func (m *CreateSourceOptions) GetRabbit() *args.RabbitReadArgs {
	if m != nil {
		return m.Rabbit
	}
	return nil
}

func (m *CreateSourceOptions) GetMqtt() *args.MQTTReadArgs {
	if m != nil {
		return m.Mqtt
	}
	return nil
}

func (m *CreateSourceOptions) GetAzureServiceBus() *args.AzureServiceBusReadArgs {
	if m != nil {
		return m.AzureServiceBus
	}
	return nil
}

func (m *CreateSourceOptions) GetGcpPubsub() *args.GCPPubSubReadArgs {
	if m != nil {
		return m.GcpPubsub
	}
	return nil
}

func (m *CreateSourceOptions) GetKubemqQueue() *args.KubeMQQueueReadArgs {
	if m != nil {
		return m.KubemqQueue
	}
	return nil
}

func (m *CreateSourceOptions) GetRedisPubsub() *args.RedisPubSubReadArgs {
	if m != nil {
		return m.RedisPubsub
	}
	return nil
}

func (m *CreateSourceOptions) GetRedisStreams() *args.RedisStreamsReadArgs {
	if m != nil {
		return m.RedisStreams
	}
	return nil
}

func (m *CreateSourceOptions) GetPostgres() *args.PostgresReadArgs {
	if m != nil {
		return m.Postgres
	}
	return nil
}

func (m *CreateSourceOptions) GetNats() *args.NatsReadArgs {
	if m != nil {
		return m.Nats
	}
	return nil
}

func (m *CreateSourceOptions) GetNatsStreaming() *args.NatsStreamingReadArgs {
	if m != nil {
		return m.NatsStreaming
	}
	return nil
}

func (m *CreateSourceOptions) GetNatsJetstream() *args.NatsJetstreamReadArgs {
	if m != nil {
		return m.NatsJetstream
	}
	return nil
}

type GetSourceOptions struct {
	// @gotags: kong:"help='ID of the relay to get (leave empty to get all)'"
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" kong:"help='ID of the relay to get (leave empty to get all)'"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSourceOptions) Reset()         { *m = GetSourceOptions{} }
func (m *GetSourceOptions) String() string { return proto.CompactTextString(m) }
func (*GetSourceOptions) ProtoMessage()    {}
func (*GetSourceOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa4270864c1a131f, []int{1}
}

func (m *GetSourceOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSourceOptions.Unmarshal(m, b)
}
func (m *GetSourceOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSourceOptions.Marshal(b, m, deterministic)
}
func (m *GetSourceOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSourceOptions.Merge(m, src)
}
func (m *GetSourceOptions) XXX_Size() int {
	return xxx_messageInfo_GetSourceOptions.Size(m)
}
func (m *GetSourceOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSourceOptions.DiscardUnknown(m)
}

var xxx_messageInfo_GetSourceOptions proto.InternalMessageInfo

func (m *GetSourceOptions) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteSourceOptions struct {
	// @gotags: kong:"help='ID of the source to delete',required=true"
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" kong:"help='ID of the source to delete',required=true"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSourceOptions) Reset()         { *m = DeleteSourceOptions{} }
func (m *DeleteSourceOptions) String() string { return proto.CompactTextString(m) }
func (*DeleteSourceOptions) ProtoMessage()    {}
func (*DeleteSourceOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa4270864c1a131f, []int{2}
}

func (m *DeleteSourceOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSourceOptions.Unmarshal(m, b)
}
func (m *DeleteSourceOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSourceOptions.Marshal(b, m, deterministic)
}
func (m *DeleteSourceOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSourceOptions.Merge(m, src)
}
func (m *DeleteSourceOptions) XXX_Size() int {
	return xxx_messageInfo_DeleteSourceOptions.Size(m)
}
func (m *DeleteSourceOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSourceOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSourceOptions proto.InternalMessageInfo

func (m *DeleteSourceOptions) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateSourceOptions)(nil), "protos.opts.CreateSourceOptions")
	proto.RegisterType((*GetSourceOptions)(nil), "protos.opts.GetSourceOptions")
	proto.RegisterType((*DeleteSourceOptions)(nil), "protos.opts.DeleteSourceOptions")
}

func init() { proto.RegisterFile("opts/ps_opts_manage_source.proto", fileDescriptor_fa4270864c1a131f) }

var fileDescriptor_fa4270864c1a131f = []byte{
	// 673 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x95, 0xdd, 0x4f, 0xdb, 0x3a,
	0x18, 0xc6, 0xc5, 0xf7, 0xc1, 0x05, 0xce, 0x39, 0x66, 0xda, 0x4c, 0x19, 0x5b, 0xe9, 0x98, 0x84,
	0x26, 0xd1, 0x4c, 0x20, 0x4d, 0x42, 0xd3, 0x2e, 0x80, 0x69, 0x88, 0x4d, 0xb0, 0xb6, 0x41, 0x9a,
	0xb4, 0x9b, 0xc8, 0x4e, 0x4c, 0x1a, 0x68, 0xe2, 0xc4, 0x1f, 0x43, 0xda, 0xff, 0xbd, 0xfb, 0xc9,
	0x76, 0x6a, 0x6a, 0x1a, 0xae, 0xd2, 0xbc, 0xcf, 0xef, 0x79, 0xf2, 0x2a, 0xaf, 0xdf, 0x14, 0x74,
	0x58, 0x29, 0x45, 0x50, 0x8a, 0x48, 0x5f, 0xa3, 0x1c, 0x17, 0x38, 0xa5, 0x91, 0x60, 0x8a, 0xc7,
	0xb4, 0x57, 0x72, 0x26, 0x19, 0x6c, 0x99, 0x8b, 0xe8, 0x69, 0xa0, 0xdd, 0xc6, 0x3c, 0x35, 0xb8,
	0xbe, 0x46, 0xf8, 0x5e, 0x44, 0xa2, 0x12, 0x16, 0x6c, 0xef, 0xf9, 0xda, 0x6f, 0xc5, 0x69, 0x24,
	0x28, 0xff, 0x95, 0xc5, 0x34, 0x22, 0x6a, 0x42, 0xed, 0x78, 0x54, 0x1a, 0x97, 0x51, 0xa9, 0x88,
	0x50, 0xa4, 0x96, 0x91, 0x27, 0xdf, 0xe1, 0x9b, 0x3b, 0x5c, 0x2b, 0xaf, 0x7d, 0x45, 0x11, 0x9a,
	0x57, 0x51, 0xa5, 0xa8, 0xa2, 0x8d, 0xd6, 0x9c, 0x15, 0x29, 0xab, 0x95, 0x17, 0xbe, 0x52, 0x49,
	0xd9, 0x28, 0x14, 0x58, 0x4e, 0xba, 0xdc, 0x9d, 0x11, 0xa2, 0x5b, 0x2a, 0x85, 0xe4, 0x14, 0xe7,
	0x4f, 0x23, 0x56, 0xcf, 0x8a, 0xb4, 0x46, 0x9e, 0xfb, 0x88, 0xa8, 0xea, 0xfa, 0xb6, 0x57, 0x2f,
	0x99, 0x90, 0x29, 0xa7, 0x93, 0x47, 0x6f, 0x79, 0x22, 0xc7, 0x84, 0x64, 0xb2, 0xf1, 0x15, 0x70,
	0x9a, 0x64, 0xc2, 0x7f, 0x7b, 0x9d, 0x06, 0xc0, 0x36, 0x55, 0xa7, 0x77, 0xff, 0xac, 0x80, 0xcd,
	0x33, 0x4e, 0xb1, 0xa4, 0xa1, 0x19, 0xf2, 0xf7, 0x52, 0x66, 0xac, 0x10, 0xf0, 0x0d, 0x58, 0x8f,
	0x59, 0x51, 0xd0, 0x58, 0xdf, 0x46, 0x59, 0x82, 0xe6, 0x3a, 0x73, 0xfb, 0xab, 0xc3, 0xb5, 0x87,
	0xe2, 0x45, 0x02, 0x21, 0x58, 0x2c, 0x70, 0x4e, 0xd1, 0xbc, 0xd1, 0xcc, 0x6f, 0xf8, 0x0c, 0x2c,
	0x15, 0x4c, 0x52, 0x81, 0x16, 0x4c, 0xd1, 0xde, 0xc0, 0x43, 0xb0, 0x64, 0x66, 0x87, 0x92, 0xce,
	0xdc, 0x7e, 0xeb, 0xf0, 0x65, 0xaf, 0x3e, 0x44, 0xba, 0xaf, 0xde, 0x37, 0xad, 0xd8, 0xc7, 0x9f,
	0xf0, 0x54, 0x0c, 0x2d, 0x0a, 0x3f, 0x80, 0x95, 0xfa, 0x40, 0x21, 0x6a, 0x5c, 0x3b, 0x9e, 0xeb,
	0xe4, 0x47, 0x18, 0x0e, 0xc2, 0x29, 0xdb, 0x32, 0xbe, 0x17, 0x61, 0x25, 0xe0, 0x7b, 0xb0, 0x64,
	0x86, 0x8d, 0x6e, 0x8c, 0xab, 0xed, 0xb9, 0x2e, 0xb5, 0x32, 0xa4, 0x38, 0xb1, 0x4f, 0x32, 0x20,
	0x7c, 0x07, 0x16, 0x0a, 0x51, 0xa1, 0xd4, 0xf0, 0xc8, 0xe3, 0xaf, 0xc2, 0x81, 0xa3, 0x35, 0x04,
	0x8f, 0xc0, 0xb2, 0x9d, 0x01, 0x1a, 0x19, 0x7c, 0xdb, 0xc3, 0x87, 0x46, 0x72, 0x8e, 0x1a, 0x85,
	0x07, 0x60, 0x51, 0x9f, 0x32, 0x94, 0x19, 0xcb, 0x96, 0xdf, 0xd1, 0xe0, 0xfa, 0xda, 0x19, 0x0c,
	0x06, 0xfb, 0xe0, 0xff, 0x99, 0x75, 0x41, 0xb7, 0xc6, 0xbb, 0xe7, 0xbf, 0x03, 0x4d, 0x85, 0x16,
	0x3a, 0x55, 0xc2, 0xc5, 0xfc, 0x8b, 0x7d, 0x01, 0x7e, 0x02, 0xe0, 0x61, 0xb5, 0xd0, 0x9d, 0x89,
	0x7a, 0xe5, 0x45, 0x9d, 0x9f, 0xf5, 0xfb, 0x8a, 0x84, 0x8a, 0xb8, 0x90, 0xd5, 0x34, 0x2e, 0xfb,
	0xc6, 0x00, 0xcf, 0xc0, 0xda, 0xf4, 0x82, 0xa1, 0xb1, 0x09, 0xe8, 0xf8, 0x53, 0x54, 0x84, 0x5e,
	0x0e, 0x06, 0x5a, 0x77, 0x11, 0x2d, 0xeb, 0x32, 0x45, 0x1d, 0x32, 0x7d, 0x44, 0x51, 0xde, 0x10,
	0x32, 0xd4, 0xc0, 0xa3, 0x3e, 0x5a, 0xbc, 0x2e, 0xea, 0x4e, 0xbe, 0x80, 0x75, 0xef, 0x18, 0x23,
	0x66, 0x52, 0x76, 0x67, 0x53, 0x42, 0x0b, 0xb8, 0x18, 0xfb, 0xf0, 0xba, 0x0a, 0x8f, 0xc1, 0x3f,
	0x93, 0x3d, 0x43, 0x65, 0xc3, 0xe9, 0xea, 0xd7, 0xa2, 0xb3, 0x3b, 0x5c, 0x0f, 0x53, 0x6f, 0x37,
	0xaa, 0x1a, 0x86, 0x79, 0x85, 0xe5, 0x83, 0xc5, 0x60, 0xf0, 0x02, 0x6c, 0xf8, 0x1f, 0x03, 0xc4,
	0x8d, 0xb1, 0x3b, 0x63, 0x0c, 0x27, 0x84, 0x4b, 0x58, 0x2f, 0xa6, 0xcb, 0x2e, 0xca, 0x7d, 0x7a,
	0x90, 0x78, 0x22, 0xea, 0xeb, 0x84, 0xf0, 0xa3, 0x5c, 0xb9, 0xdb, 0x05, 0xff, 0x9d, 0x53, 0xe9,
	0xef, 0xfc, 0x06, 0x98, 0x77, 0x8b, 0x3e, 0x9f, 0x25, 0xdd, 0xb7, 0x60, 0xf3, 0x33, 0x1d, 0xd3,
	0xc7, 0x9f, 0x86, 0x47, 0xd8, 0xe9, 0xc7, 0x9f, 0xc7, 0x69, 0x26, 0x47, 0x8a, 0xf4, 0x62, 0x96,
	0x07, 0x04, 0xcb, 0x78, 0x14, 0x33, 0x5e, 0x06, 0xe5, 0x58, 0xe5, 0x84, 0xf2, 0x03, 0x11, 0x8f,
	0x68, 0x8e, 0x45, 0x40, 0x54, 0x36, 0x4e, 0x82, 0x94, 0x05, 0xb6, 0xd9, 0x40, 0xff, 0x81, 0x90,
	0x65, 0x73, 0x73, 0xf4, 0x37, 0x00, 0x00, 0xff, 0xff, 0xdf, 0xd2, 0x12, 0x6f, 0x78, 0x06, 0x00,
	0x00,
}
