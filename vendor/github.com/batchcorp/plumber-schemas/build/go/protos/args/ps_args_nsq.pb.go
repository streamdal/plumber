// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: ps_args_nsq.proto

package args

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NSQConn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: kong:"help='Address of NSQ server (Ex: localhost:4150)',env='PLUMBER_RELAY_NSQ_NSQD_ADDRESS',default='localhost:4150',xor=nsq_addressZ"
	NsqdAddress string `protobuf:"bytes,1,opt,name=nsqd_address,json=nsqdAddress,proto3" json:"nsqd_address,omitempty" kong:"help='Address of NSQ server (Ex: localhost:4150)',env='PLUMBER_RELAY_NSQ_NSQD_ADDRESS',default='localhost:4150',xor=nsq_addressZ"`
	// @gotags: kong:"help='Address of LookupD server (Ex: localhost:4161)',env='PLUMBER_RELAY_NSQ_LOOKUPD_ADDRESS',xor=nsq_address"
	LookupdAddress string `protobuf:"bytes,2,opt,name=lookupd_address,json=lookupdAddress,proto3" json:"lookupd_address,omitempty" kong:"help='Address of LookupD server (Ex: localhost:4161)',env='PLUMBER_RELAY_NSQ_LOOKUPD_ADDRESS',xor=nsq_address"`
	// @gotags: kong:"help='Enable TLS usage',env='PLUMBER_RELAY_NSQ_USE_TLS'"
	UseTls bool `protobuf:"varint,3,opt,name=use_tls,json=useTls,proto3" json:"use_tls,omitempty" kong:"help='Enable TLS usage',env='PLUMBER_RELAY_NSQ_USE_TLS'"`
	// @gotags: kong:"help='Whether to verify server certificate',env='PLUMBER_RELAY_NSQ_SKIP_VERIFY_TLS'"
	TlsSkipVerify bool `protobuf:"varint,4,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty" kong:"help='Whether to verify server certificate',env='PLUMBER_RELAY_NSQ_SKIP_VERIFY_TLS'"`
	// @gotags: kong:"help='CA file',env='PLUMBER_RELAY_NSQ_TLS_CA_CERT'"
	TlsCaCert string `protobuf:"bytes,5,opt,name=tls_ca_cert,json=tlsCaCert,proto3" json:"tls_ca_cert,omitempty" kong:"help='CA file',env='PLUMBER_RELAY_NSQ_TLS_CA_CERT'"`
	// @gotags: kong:"help='Client cert file',env='PLUMBER_RELAY_NSQ_TLS_CLIENT_CERT'"
	TlsClientCert string `protobuf:"bytes,6,opt,name=tls_client_cert,json=tlsClientCert,proto3" json:"tls_client_cert,omitempty" kong:"help='Client cert file',env='PLUMBER_RELAY_NSQ_TLS_CLIENT_CERT'"`
	// @gotags: kong:"help='Client key file',env='PLUMBER_RELAY_NSQ_TLS_CLIENT_KEY'"
	TlsClientKey string `protobuf:"bytes,7,opt,name=tls_client_key,json=tlsClientKey,proto3" json:"tls_client_key,omitempty" kong:"help='Client key file',env='PLUMBER_RELAY_NSQ_TLS_CLIENT_KEY'"`
	// @gotags: kong:"help='Authentication secret',env='PLUMBER_RELAY_NSQ_AUTH_SECRET'"
	AuthSecret string `protobuf:"bytes,8,opt,name=auth_secret,json=authSecret,proto3" json:"auth_secret,omitempty" kong:"help='Authentication secret',env='PLUMBER_RELAY_NSQ_AUTH_SECRET'"`
	// @gotags: kong:"help='Client ID to identify as',env='PLUMBER_RELAY_NSQ_CLIENT_ID',default=plumber"
	ClientId string `protobuf:"bytes,9,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty" kong:"help='Client ID to identify as',env='PLUMBER_RELAY_NSQ_CLIENT_ID',default=plumber"`
}

func (x *NSQConn) Reset() {
	*x = NSQConn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_args_nsq_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NSQConn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NSQConn) ProtoMessage() {}

func (x *NSQConn) ProtoReflect() protoreflect.Message {
	mi := &file_ps_args_nsq_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NSQConn.ProtoReflect.Descriptor instead.
func (*NSQConn) Descriptor() ([]byte, []int) {
	return file_ps_args_nsq_proto_rawDescGZIP(), []int{0}
}

func (x *NSQConn) GetNsqdAddress() string {
	if x != nil {
		return x.NsqdAddress
	}
	return ""
}

func (x *NSQConn) GetLookupdAddress() string {
	if x != nil {
		return x.LookupdAddress
	}
	return ""
}

func (x *NSQConn) GetUseTls() bool {
	if x != nil {
		return x.UseTls
	}
	return false
}

func (x *NSQConn) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *NSQConn) GetTlsCaCert() string {
	if x != nil {
		return x.TlsCaCert
	}
	return ""
}

func (x *NSQConn) GetTlsClientCert() string {
	if x != nil {
		return x.TlsClientCert
	}
	return ""
}

func (x *NSQConn) GetTlsClientKey() string {
	if x != nil {
		return x.TlsClientKey
	}
	return ""
}

func (x *NSQConn) GetAuthSecret() string {
	if x != nil {
		return x.AuthSecret
	}
	return ""
}

func (x *NSQConn) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type NSQReadArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: kong:"help='NSQ topic to read from',env='PLUMBER_RELAY_NSQ_TOPIC',required"
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty" kong:"help='NSQ topic to read from',env='PLUMBER_RELAY_NSQ_TOPIC',required"`
	// @gotags: kong:"help='Output channel',env='PLUMBER_RELAY_NSQ_CHANNEL',required"
	Channel string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty" kong:"help='Output channel',env='PLUMBER_RELAY_NSQ_CHANNEL',required"`
}

func (x *NSQReadArgs) Reset() {
	*x = NSQReadArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_args_nsq_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NSQReadArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NSQReadArgs) ProtoMessage() {}

func (x *NSQReadArgs) ProtoReflect() protoreflect.Message {
	mi := &file_ps_args_nsq_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NSQReadArgs.ProtoReflect.Descriptor instead.
func (*NSQReadArgs) Descriptor() ([]byte, []int) {
	return file_ps_args_nsq_proto_rawDescGZIP(), []int{1}
}

func (x *NSQReadArgs) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *NSQReadArgs) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

type NSQWriteArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: kong:"help='NSQ topic to write to',required"
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty" kong:"help='NSQ topic to write to',required"`
}

func (x *NSQWriteArgs) Reset() {
	*x = NSQWriteArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_args_nsq_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NSQWriteArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NSQWriteArgs) ProtoMessage() {}

func (x *NSQWriteArgs) ProtoReflect() protoreflect.Message {
	mi := &file_ps_args_nsq_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NSQWriteArgs.ProtoReflect.Descriptor instead.
func (*NSQWriteArgs) Descriptor() ([]byte, []int) {
	return file_ps_args_nsq_proto_rawDescGZIP(), []int{2}
}

func (x *NSQWriteArgs) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

var File_ps_args_nsq_proto protoreflect.FileDescriptor

var file_ps_args_nsq_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x73, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x5f, 0x6e, 0x73, 0x71, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x72, 0x67, 0x73,
	0x22, 0xc2, 0x02, 0x0a, 0x07, 0x4e, 0x53, 0x51, 0x43, 0x6f, 0x6e, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x73, 0x71, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x73, 0x71, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x5f,
	0x74, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x54, 0x6c,
	0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x74, 0x6c, 0x73, 0x53,
	0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x6c, 0x73,
	0x5f, 0x63, 0x61, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x6c, 0x73, 0x43, 0x61, 0x43, 0x65, 0x72, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6c, 0x73,
	0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6c, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6c, 0x73, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75,
	0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x0b, 0x4e, 0x53, 0x51, 0x52, 0x65, 0x61, 0x64,
	0x41, 0x72, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x24, 0x0a, 0x0c, 0x4e, 0x53, 0x51, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x41, 0x72, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x63, 0x6f,
	0x72, 0x70, 0x2f, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x73, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x61, 0x72, 0x67, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ps_args_nsq_proto_rawDescOnce sync.Once
	file_ps_args_nsq_proto_rawDescData = file_ps_args_nsq_proto_rawDesc
)

func file_ps_args_nsq_proto_rawDescGZIP() []byte {
	file_ps_args_nsq_proto_rawDescOnce.Do(func() {
		file_ps_args_nsq_proto_rawDescData = protoimpl.X.CompressGZIP(file_ps_args_nsq_proto_rawDescData)
	})
	return file_ps_args_nsq_proto_rawDescData
}

var file_ps_args_nsq_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ps_args_nsq_proto_goTypes = []interface{}{
	(*NSQConn)(nil),      // 0: protos.args.NSQConn
	(*NSQReadArgs)(nil),  // 1: protos.args.NSQReadArgs
	(*NSQWriteArgs)(nil), // 2: protos.args.NSQWriteArgs
}
var file_ps_args_nsq_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ps_args_nsq_proto_init() }
func file_ps_args_nsq_proto_init() {
	if File_ps_args_nsq_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ps_args_nsq_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NSQConn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_args_nsq_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NSQReadArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_args_nsq_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NSQWriteArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ps_args_nsq_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ps_args_nsq_proto_goTypes,
		DependencyIndexes: file_ps_args_nsq_proto_depIdxs,
		MessageInfos:      file_ps_args_nsq_proto_msgTypes,
	}.Build()
	File_ps_args_nsq_proto = out.File
	file_ps_args_nsq_proto_rawDesc = nil
	file_ps_args_nsq_proto_goTypes = nil
	file_ps_args_nsq_proto_depIdxs = nil
}
