// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: ps_args_gcp_pubsub.proto

package args

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GCPPubSubConn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: kong:"help='Project ID',env='PLUMBER_RELAY_GCP_PROJECT_ID',required"
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty" kong:"help='Project ID',env='PLUMBER_RELAY_GCP_PROJECT_ID',required"`
	// @gotags: kong:"help='GCP Credentials in JSON format',env='PLUMBER_RELAY_GCP_CREDENTIALS'"
	CredentialsJson string `protobuf:"bytes,2,opt,name=credentials_json,json=credentialsJson,proto3" json:"credentials_json,omitempty" kong:"help='GCP Credentials in JSON format',env='PLUMBER_RELAY_GCP_CREDENTIALS'"`
	// @gotags: kong:"help='Path to GCP credentials JSON file',env='GOOGLE_APPLICATION_CREDENTIALS'"
	CredentialsFile string `protobuf:"bytes,3,opt,name=credentials_file,json=credentialsFile,proto3" json:"credentials_file,omitempty" kong:"help='Path to GCP credentials JSON file',env='GOOGLE_APPLICATION_CREDENTIALS'"`
}

func (x *GCPPubSubConn) Reset() {
	*x = GCPPubSubConn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_args_gcp_pubsub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCPPubSubConn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCPPubSubConn) ProtoMessage() {}

func (x *GCPPubSubConn) ProtoReflect() protoreflect.Message {
	mi := &file_ps_args_gcp_pubsub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCPPubSubConn.ProtoReflect.Descriptor instead.
func (*GCPPubSubConn) Descriptor() ([]byte, []int) {
	return file_ps_args_gcp_pubsub_proto_rawDescGZIP(), []int{0}
}

func (x *GCPPubSubConn) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GCPPubSubConn) GetCredentialsJson() string {
	if x != nil {
		return x.CredentialsJson
	}
	return ""
}

func (x *GCPPubSubConn) GetCredentialsFile() string {
	if x != nil {
		return x.CredentialsFile
	}
	return ""
}

type GCPPubSubReadArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: kong:"help='Subscription ID',env='PLUMBER_RELAY_GCP_SUBSCRIPTION_ID',required"
	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty" kong:"help='Subscription ID',env='PLUMBER_RELAY_GCP_SUBSCRIPTION_ID',required"`
	// @gotags: kong:"help='Whether to acknowledge message receive',env='PLUMBER_RELAY_GCP_ACK_MESSAGE',default=true"
	AckMessages bool `protobuf:"varint,2,opt,name=ack_messages,json=ackMessages,proto3" json:"ack_messages,omitempty" kong:"help='Whether to acknowledge message receive',env='PLUMBER_RELAY_GCP_ACK_MESSAGE',default=true"`
}

func (x *GCPPubSubReadArgs) Reset() {
	*x = GCPPubSubReadArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_args_gcp_pubsub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCPPubSubReadArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCPPubSubReadArgs) ProtoMessage() {}

func (x *GCPPubSubReadArgs) ProtoReflect() protoreflect.Message {
	mi := &file_ps_args_gcp_pubsub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCPPubSubReadArgs.ProtoReflect.Descriptor instead.
func (*GCPPubSubReadArgs) Descriptor() ([]byte, []int) {
	return file_ps_args_gcp_pubsub_proto_rawDescGZIP(), []int{1}
}

func (x *GCPPubSubReadArgs) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *GCPPubSubReadArgs) GetAckMessages() bool {
	if x != nil {
		return x.AckMessages
	}
	return false
}

type GCPPubSubWriteArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: kong:"help='Topic ID to publish message(s) to',required"
	TopicId string `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty" kong:"help='Topic ID to publish message(s) to',required"`
}

func (x *GCPPubSubWriteArgs) Reset() {
	*x = GCPPubSubWriteArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_args_gcp_pubsub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCPPubSubWriteArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCPPubSubWriteArgs) ProtoMessage() {}

func (x *GCPPubSubWriteArgs) ProtoReflect() protoreflect.Message {
	mi := &file_ps_args_gcp_pubsub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCPPubSubWriteArgs.ProtoReflect.Descriptor instead.
func (*GCPPubSubWriteArgs) Descriptor() ([]byte, []int) {
	return file_ps_args_gcp_pubsub_proto_rawDescGZIP(), []int{2}
}

func (x *GCPPubSubWriteArgs) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

var File_ps_args_gcp_pubsub_proto protoreflect.FileDescriptor

var file_ps_args_gcp_pubsub_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x73, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x5f, 0x67, 0x63, 0x70, 0x5f, 0x70, 0x75,
	0x62, 0x73, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x61, 0x72, 0x67, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x0d, 0x47, 0x43, 0x50, 0x50,
	0x75, 0x62, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6e, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x4a,
	0x73, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x5f,
	0x0a, 0x11, 0x47, 0x43, 0x50, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x52, 0x65, 0x61, 0x64, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22,
	0x2f, 0x0a, 0x12, 0x47, 0x43, 0x50, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x63, 0x6f, 0x72, 0x70, 0x2f, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x67,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x72, 0x67, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ps_args_gcp_pubsub_proto_rawDescOnce sync.Once
	file_ps_args_gcp_pubsub_proto_rawDescData = file_ps_args_gcp_pubsub_proto_rawDesc
)

func file_ps_args_gcp_pubsub_proto_rawDescGZIP() []byte {
	file_ps_args_gcp_pubsub_proto_rawDescOnce.Do(func() {
		file_ps_args_gcp_pubsub_proto_rawDescData = protoimpl.X.CompressGZIP(file_ps_args_gcp_pubsub_proto_rawDescData)
	})
	return file_ps_args_gcp_pubsub_proto_rawDescData
}

var file_ps_args_gcp_pubsub_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ps_args_gcp_pubsub_proto_goTypes = []interface{}{
	(*GCPPubSubConn)(nil),      // 0: protos.args.GCPPubSubConn
	(*GCPPubSubReadArgs)(nil),  // 1: protos.args.GCPPubSubReadArgs
	(*GCPPubSubWriteArgs)(nil), // 2: protos.args.GCPPubSubWriteArgs
}
var file_ps_args_gcp_pubsub_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ps_args_gcp_pubsub_proto_init() }
func file_ps_args_gcp_pubsub_proto_init() {
	if File_ps_args_gcp_pubsub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ps_args_gcp_pubsub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCPPubSubConn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_args_gcp_pubsub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCPPubSubReadArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_args_gcp_pubsub_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCPPubSubWriteArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ps_args_gcp_pubsub_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ps_args_gcp_pubsub_proto_goTypes,
		DependencyIndexes: file_ps_args_gcp_pubsub_proto_depIdxs,
		MessageInfos:      file_ps_args_gcp_pubsub_proto_msgTypes,
	}.Build()
	File_ps_args_gcp_pubsub_proto = out.File
	file_ps_args_gcp_pubsub_proto_rawDesc = nil
	file_ps_args_gcp_pubsub_proto_goTypes = nil
	file_ps_args_gcp_pubsub_proto_depIdxs = nil
}
