// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: ps_args_redis_pubsub.proto

package args

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RedisPubSubConn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: kong:"help='Address of redis server',env='PLUMBER_RELAY_REDIS_PUBSUB_ADDRESS',default=localhost:6379"
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty" kong:"help='Address of redis server',env='PLUMBER_RELAY_REDIS_PUBSUB_ADDRESS',default=localhost:6379"`
	// @gotags: kong:"help='Optional username to auth with (redis >= v6.0.0)',env='PLUMBER_RELAY_REDIS_PUBSUB_USERNAME'"
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty" kong:"help='Optional username to auth with (redis >= v6.0.0)',env='PLUMBER_RELAY_REDIS_PUBSUB_USERNAME'"`
	// @gotags: kong:"help='Optional password to auth with (redis >= v6.0.0)',env='PLUMBER_RELAY_REDIS_PUBSUB_PASSWORD'"
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty" kong:"help='Optional password to auth with (redis >= v6.0.0)',env='PLUMBER_RELAY_REDIS_PUBSUB_PASSWORD'"`
	// @gotags: kong:"help='Database (0-16)',env='PLUMBER_RELAY_REDIS_PUBSUB_DATABASE'"
	Database uint32 `protobuf:"varint,4,opt,name=database,proto3" json:"database,omitempty" kong:"help='Database (0-16)',env='PLUMBER_RELAY_REDIS_PUBSUB_DATABASE'"`
}

func (x *RedisPubSubConn) Reset() {
	*x = RedisPubSubConn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_args_redis_pubsub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisPubSubConn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisPubSubConn) ProtoMessage() {}

func (x *RedisPubSubConn) ProtoReflect() protoreflect.Message {
	mi := &file_ps_args_redis_pubsub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisPubSubConn.ProtoReflect.Descriptor instead.
func (*RedisPubSubConn) Descriptor() ([]byte, []int) {
	return file_ps_args_redis_pubsub_proto_rawDescGZIP(), []int{0}
}

func (x *RedisPubSubConn) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RedisPubSubConn) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RedisPubSubConn) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RedisPubSubConn) GetDatabase() uint32 {
	if x != nil {
		return x.Database
	}
	return 0
}

type RedisPubSubReadArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: kong:"help='Comma separated list of channels to read from',env='PLUMBER_RELAY_REDIS_PUBSUB_CHANNELS',required"
	Channels []string `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty" kong:"help='Comma separated list of channels to read from',env='PLUMBER_RELAY_REDIS_PUBSUB_CHANNELS',required"`
}

func (x *RedisPubSubReadArgs) Reset() {
	*x = RedisPubSubReadArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_args_redis_pubsub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisPubSubReadArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisPubSubReadArgs) ProtoMessage() {}

func (x *RedisPubSubReadArgs) ProtoReflect() protoreflect.Message {
	mi := &file_ps_args_redis_pubsub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisPubSubReadArgs.ProtoReflect.Descriptor instead.
func (*RedisPubSubReadArgs) Descriptor() ([]byte, []int) {
	return file_ps_args_redis_pubsub_proto_rawDescGZIP(), []int{1}
}

func (x *RedisPubSubReadArgs) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

type RedisPubSubWriteArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: kong:"help='Comma separated list of channels to write to',required"
	Channels []string `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty" kong:"help='Comma separated list of channels to write to',required"`
}

func (x *RedisPubSubWriteArgs) Reset() {
	*x = RedisPubSubWriteArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_args_redis_pubsub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisPubSubWriteArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisPubSubWriteArgs) ProtoMessage() {}

func (x *RedisPubSubWriteArgs) ProtoReflect() protoreflect.Message {
	mi := &file_ps_args_redis_pubsub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisPubSubWriteArgs.ProtoReflect.Descriptor instead.
func (*RedisPubSubWriteArgs) Descriptor() ([]byte, []int) {
	return file_ps_args_redis_pubsub_proto_rawDescGZIP(), []int{2}
}

func (x *RedisPubSubWriteArgs) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

var File_ps_args_redis_pubsub_proto protoreflect.FileDescriptor

var file_ps_args_redis_pubsub_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x73, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f,
	0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x72, 0x67, 0x73, 0x22, 0x7f, 0x0a, 0x0f, 0x52, 0x65, 0x64,
	0x69, 0x73, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6e, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x13, 0x52, 0x65,
	0x64, 0x69, 0x73, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x52, 0x65, 0x61, 0x64, 0x41, 0x72, 0x67,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x32, 0x0a,
	0x14, 0x52, 0x65, 0x64, 0x69, 0x73, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x63, 0x6f, 0x72, 0x70, 0x2f, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f,
	0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x72, 0x67, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ps_args_redis_pubsub_proto_rawDescOnce sync.Once
	file_ps_args_redis_pubsub_proto_rawDescData = file_ps_args_redis_pubsub_proto_rawDesc
)

func file_ps_args_redis_pubsub_proto_rawDescGZIP() []byte {
	file_ps_args_redis_pubsub_proto_rawDescOnce.Do(func() {
		file_ps_args_redis_pubsub_proto_rawDescData = protoimpl.X.CompressGZIP(file_ps_args_redis_pubsub_proto_rawDescData)
	})
	return file_ps_args_redis_pubsub_proto_rawDescData
}

var file_ps_args_redis_pubsub_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ps_args_redis_pubsub_proto_goTypes = []interface{}{
	(*RedisPubSubConn)(nil),      // 0: protos.args.RedisPubSubConn
	(*RedisPubSubReadArgs)(nil),  // 1: protos.args.RedisPubSubReadArgs
	(*RedisPubSubWriteArgs)(nil), // 2: protos.args.RedisPubSubWriteArgs
}
var file_ps_args_redis_pubsub_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ps_args_redis_pubsub_proto_init() }
func file_ps_args_redis_pubsub_proto_init() {
	if File_ps_args_redis_pubsub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ps_args_redis_pubsub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisPubSubConn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_args_redis_pubsub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisPubSubReadArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_args_redis_pubsub_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisPubSubWriteArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ps_args_redis_pubsub_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ps_args_redis_pubsub_proto_goTypes,
		DependencyIndexes: file_ps_args_redis_pubsub_proto_depIdxs,
		MessageInfos:      file_ps_args_redis_pubsub_proto_msgTypes,
	}.Build()
	File_ps_args_redis_pubsub_proto = out.File
	file_ps_args_redis_pubsub_proto_rawDesc = nil
	file_ps_args_redis_pubsub_proto_goTypes = nil
	file_ps_args_redis_pubsub_proto_depIdxs = nil
}
