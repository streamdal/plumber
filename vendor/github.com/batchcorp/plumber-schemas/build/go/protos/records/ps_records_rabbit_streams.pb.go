// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: records/ps_records_rabbit_streams.proto

package records

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RabbitStreams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryTag         string               `protobuf:"bytes,1,opt,name=delivery_tag,json=deliveryTag,proto3" json:"delivery_tag,omitempty"`
	Format              uint32               `protobuf:"varint,2,opt,name=format,proto3" json:"format,omitempty"`
	Header              *RabbitStreamsHeader `protobuf:"bytes,3,opt,name=header,proto3" json:"header,omitempty"`
	DeliveryAnnotations map[string]string    `protobuf:"bytes,4,rep,name=delivery_annotations,json=deliveryAnnotations,proto3" json:"delivery_annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SendSettled         bool                 `protobuf:"varint,5,opt,name=send_settled,json=sendSettled,proto3" json:"send_settled,omitempty"`
	StreamName          string               `protobuf:"bytes,6,opt,name=stream_name,json=streamName,proto3" json:"stream_name,omitempty"`
	Timestamp           int64                `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value               []byte               `protobuf:"bytes,8,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RabbitStreams) Reset() {
	*x = RabbitStreams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_records_ps_records_rabbit_streams_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RabbitStreams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RabbitStreams) ProtoMessage() {}

func (x *RabbitStreams) ProtoReflect() protoreflect.Message {
	mi := &file_records_ps_records_rabbit_streams_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RabbitStreams.ProtoReflect.Descriptor instead.
func (*RabbitStreams) Descriptor() ([]byte, []int) {
	return file_records_ps_records_rabbit_streams_proto_rawDescGZIP(), []int{0}
}

func (x *RabbitStreams) GetDeliveryTag() string {
	if x != nil {
		return x.DeliveryTag
	}
	return ""
}

func (x *RabbitStreams) GetFormat() uint32 {
	if x != nil {
		return x.Format
	}
	return 0
}

func (x *RabbitStreams) GetHeader() *RabbitStreamsHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *RabbitStreams) GetDeliveryAnnotations() map[string]string {
	if x != nil {
		return x.DeliveryAnnotations
	}
	return nil
}

func (x *RabbitStreams) GetSendSettled() bool {
	if x != nil {
		return x.SendSettled
	}
	return false
}

func (x *RabbitStreams) GetStreamName() string {
	if x != nil {
		return x.StreamName
	}
	return ""
}

func (x *RabbitStreams) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *RabbitStreams) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type RabbitStreamsHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Durable       bool   `protobuf:"varint,1,opt,name=durable,proto3" json:"durable,omitempty"`
	Priority      uint32 `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	Ttl           int64  `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	FirstAcquirer bool   `protobuf:"varint,4,opt,name=first_acquirer,json=firstAcquirer,proto3" json:"first_acquirer,omitempty"`
	DeliveryCount uint32 `protobuf:"varint,5,opt,name=delivery_count,json=deliveryCount,proto3" json:"delivery_count,omitempty"`
}

func (x *RabbitStreamsHeader) Reset() {
	*x = RabbitStreamsHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_records_ps_records_rabbit_streams_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RabbitStreamsHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RabbitStreamsHeader) ProtoMessage() {}

func (x *RabbitStreamsHeader) ProtoReflect() protoreflect.Message {
	mi := &file_records_ps_records_rabbit_streams_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RabbitStreamsHeader.ProtoReflect.Descriptor instead.
func (*RabbitStreamsHeader) Descriptor() ([]byte, []int) {
	return file_records_ps_records_rabbit_streams_proto_rawDescGZIP(), []int{1}
}

func (x *RabbitStreamsHeader) GetDurable() bool {
	if x != nil {
		return x.Durable
	}
	return false
}

func (x *RabbitStreamsHeader) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *RabbitStreamsHeader) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *RabbitStreamsHeader) GetFirstAcquirer() bool {
	if x != nil {
		return x.FirstAcquirer
	}
	return false
}

func (x *RabbitStreamsHeader) GetDeliveryCount() uint32 {
	if x != nil {
		return x.DeliveryCount
	}
	return 0
}

var File_records_ps_records_rabbit_streams_proto protoreflect.FileDescriptor

var file_records_ps_records_rabbit_streams_proto_rawDesc = []byte{
	0x0a, 0x27, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2f, 0x70, 0x73, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x5f, 0x72, 0x61, 0x62, 0x62, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xb2, 0x03, 0x0a, 0x0d, 0x52, 0x61,
	0x62, 0x62, 0x69, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x61, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x52, 0x61, 0x62, 0x62, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x73, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x69, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x2e, 0x52, 0x61, 0x62, 0x62, 0x69, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x46, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xab,
	0x01, 0x0a, 0x13, 0x52, 0x61, 0x62, 0x62, 0x69, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x25,
	0x0a, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x41, 0x63, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x3e, 0x5a, 0x3c,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x63, 0x6f, 0x72, 0x70, 0x2f, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2d, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x73, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_records_ps_records_rabbit_streams_proto_rawDescOnce sync.Once
	file_records_ps_records_rabbit_streams_proto_rawDescData = file_records_ps_records_rabbit_streams_proto_rawDesc
)

func file_records_ps_records_rabbit_streams_proto_rawDescGZIP() []byte {
	file_records_ps_records_rabbit_streams_proto_rawDescOnce.Do(func() {
		file_records_ps_records_rabbit_streams_proto_rawDescData = protoimpl.X.CompressGZIP(file_records_ps_records_rabbit_streams_proto_rawDescData)
	})
	return file_records_ps_records_rabbit_streams_proto_rawDescData
}

var file_records_ps_records_rabbit_streams_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_records_ps_records_rabbit_streams_proto_goTypes = []interface{}{
	(*RabbitStreams)(nil),       // 0: protos.records.RabbitStreams
	(*RabbitStreamsHeader)(nil), // 1: protos.records.RabbitStreamsHeader
	nil,                         // 2: protos.records.RabbitStreams.DeliveryAnnotationsEntry
}
var file_records_ps_records_rabbit_streams_proto_depIdxs = []int32{
	1, // 0: protos.records.RabbitStreams.header:type_name -> protos.records.RabbitStreamsHeader
	2, // 1: protos.records.RabbitStreams.delivery_annotations:type_name -> protos.records.RabbitStreams.DeliveryAnnotationsEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_records_ps_records_rabbit_streams_proto_init() }
func file_records_ps_records_rabbit_streams_proto_init() {
	if File_records_ps_records_rabbit_streams_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_records_ps_records_rabbit_streams_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RabbitStreams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_records_ps_records_rabbit_streams_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RabbitStreamsHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_records_ps_records_rabbit_streams_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_records_ps_records_rabbit_streams_proto_goTypes,
		DependencyIndexes: file_records_ps_records_rabbit_streams_proto_depIdxs,
		MessageInfos:      file_records_ps_records_rabbit_streams_proto_msgTypes,
	}.Build()
	File_records_ps_records_rabbit_streams_proto = out.File
	file_records_ps_records_rabbit_streams_proto_rawDesc = nil
	file_records_ps_records_rabbit_streams_proto_goTypes = nil
	file_records_ps_records_rabbit_streams_proto_depIdxs = nil
}
