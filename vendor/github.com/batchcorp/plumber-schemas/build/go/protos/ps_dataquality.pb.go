// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: ps_dataquality.proto

package protos

import (
	common "github.com/batchcorp/plumber-schemas/build/go/protos/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDataQualityRuleSetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Every gRPC request must have a valid auth config
	Auth *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	// The message bus / data source we're pulling rules for
	DataSource string `protobuf:"bytes,1,opt,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
}

func (x *GetDataQualityRuleSetsRequest) Reset() {
	*x = GetDataQualityRuleSetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataQualityRuleSetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataQualityRuleSetsRequest) ProtoMessage() {}

func (x *GetDataQualityRuleSetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataQualityRuleSetsRequest.ProtoReflect.Descriptor instead.
func (*GetDataQualityRuleSetsRequest) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{0}
}

func (x *GetDataQualityRuleSetsRequest) GetAuth() *common.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GetDataQualityRuleSetsRequest) GetDataSource() string {
	if x != nil {
		return x.DataSource
	}
	return ""
}

type GetDataQualityRuleSetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   *common.Status    `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	RuleSets []*common.RuleSet `protobuf:"bytes,1,rep,name=rule_sets,json=ruleSets,proto3" json:"rule_sets,omitempty"`
}

func (x *GetDataQualityRuleSetsResponse) Reset() {
	*x = GetDataQualityRuleSetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataQualityRuleSetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataQualityRuleSetsResponse) ProtoMessage() {}

func (x *GetDataQualityRuleSetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataQualityRuleSetsResponse.ProtoReflect.Descriptor instead.
func (*GetDataQualityRuleSetsResponse) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{1}
}

func (x *GetDataQualityRuleSetsResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetDataQualityRuleSetsResponse) GetRuleSets() []*common.RuleSet {
	if x != nil {
		return x.RuleSets
	}
	return nil
}

type GetDataQualityRuleSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Every gRPC request must have a valid auth config
	Auth *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	Id   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDataQualityRuleSetRequest) Reset() {
	*x = GetDataQualityRuleSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataQualityRuleSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataQualityRuleSetRequest) ProtoMessage() {}

func (x *GetDataQualityRuleSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataQualityRuleSetRequest.ProtoReflect.Descriptor instead.
func (*GetDataQualityRuleSetRequest) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{2}
}

func (x *GetDataQualityRuleSetRequest) GetAuth() *common.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GetDataQualityRuleSetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDataQualityRuleSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  *common.Status  `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	RuleSet *common.RuleSet `protobuf:"bytes,1,opt,name=rule_set,json=ruleSet,proto3" json:"rule_set,omitempty"`
}

func (x *GetDataQualityRuleSetResponse) Reset() {
	*x = GetDataQualityRuleSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataQualityRuleSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataQualityRuleSetResponse) ProtoMessage() {}

func (x *GetDataQualityRuleSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataQualityRuleSetResponse.ProtoReflect.Descriptor instead.
func (*GetDataQualityRuleSetResponse) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{3}
}

func (x *GetDataQualityRuleSetResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetDataQualityRuleSetResponse) GetRuleSet() *common.RuleSet {
	if x != nil {
		return x.RuleSet
	}
	return nil
}

type CreateDataQualityRuleSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Every gRPC request must have a valid auth config
	Auth    *common.Auth    `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	RuleSet *common.RuleSet `protobuf:"bytes,1,opt,name=rule_set,json=ruleSet,proto3" json:"rule_set,omitempty"`
}

func (x *CreateDataQualityRuleSetRequest) Reset() {
	*x = CreateDataQualityRuleSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataQualityRuleSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataQualityRuleSetRequest) ProtoMessage() {}

func (x *CreateDataQualityRuleSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataQualityRuleSetRequest.ProtoReflect.Descriptor instead.
func (*CreateDataQualityRuleSetRequest) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDataQualityRuleSetRequest) GetAuth() *common.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CreateDataQualityRuleSetRequest) GetRuleSet() *common.RuleSet {
	if x != nil {
		return x.RuleSet
	}
	return nil
}

type CreateDataQualityRuleSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	Id     string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateDataQualityRuleSetResponse) Reset() {
	*x = CreateDataQualityRuleSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataQualityRuleSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataQualityRuleSetResponse) ProtoMessage() {}

func (x *CreateDataQualityRuleSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataQualityRuleSetResponse.ProtoReflect.Descriptor instead.
func (*CreateDataQualityRuleSetResponse) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{5}
}

func (x *CreateDataQualityRuleSetResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CreateDataQualityRuleSetResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateDataQualityRuleSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Every gRPC request must have a valid auth config
	Auth    *common.Auth    `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	Id      string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RuleSet *common.RuleSet `protobuf:"bytes,2,opt,name=rule_set,json=ruleSet,proto3" json:"rule_set,omitempty"`
}

func (x *UpdateDataQualityRuleSetRequest) Reset() {
	*x = UpdateDataQualityRuleSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDataQualityRuleSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataQualityRuleSetRequest) ProtoMessage() {}

func (x *UpdateDataQualityRuleSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataQualityRuleSetRequest.ProtoReflect.Descriptor instead.
func (*UpdateDataQualityRuleSetRequest) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDataQualityRuleSetRequest) GetAuth() *common.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *UpdateDataQualityRuleSetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDataQualityRuleSetRequest) GetRuleSet() *common.RuleSet {
	if x != nil {
		return x.RuleSet
	}
	return nil
}

type UpdateDataQualityRuleSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateDataQualityRuleSetResponse) Reset() {
	*x = UpdateDataQualityRuleSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDataQualityRuleSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataQualityRuleSetResponse) ProtoMessage() {}

func (x *UpdateDataQualityRuleSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataQualityRuleSetResponse.ProtoReflect.Descriptor instead.
func (*UpdateDataQualityRuleSetResponse) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateDataQualityRuleSetResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type DeleteDataQualityRuleSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Every gRPC request must have a valid auth config
	Auth *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	Id   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteDataQualityRuleSetRequest) Reset() {
	*x = DeleteDataQualityRuleSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDataQualityRuleSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataQualityRuleSetRequest) ProtoMessage() {}

func (x *DeleteDataQualityRuleSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDataQualityRuleSetRequest.ProtoReflect.Descriptor instead.
func (*DeleteDataQualityRuleSetRequest) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDataQualityRuleSetRequest) GetAuth() *common.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *DeleteDataQualityRuleSetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteDataQualityRuleSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteDataQualityRuleSetResponse) Reset() {
	*x = DeleteDataQualityRuleSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDataQualityRuleSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataQualityRuleSetResponse) ProtoMessage() {}

func (x *DeleteDataQualityRuleSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDataQualityRuleSetResponse.ProtoReflect.Descriptor instead.
func (*DeleteDataQualityRuleSetResponse) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteDataQualityRuleSetResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetDataQualityRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Every gRPC request must have a valid auth config
	Auth *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	// The rule set we're pulling rules for
	RuleSetId string `protobuf:"bytes,2,opt,name=rule_set_id,json=ruleSetId,proto3" json:"rule_set_id,omitempty"`
	// The rule we're pulling
	RuleId string `protobuf:"bytes,3,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
}

func (x *GetDataQualityRuleRequest) Reset() {
	*x = GetDataQualityRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataQualityRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataQualityRuleRequest) ProtoMessage() {}

func (x *GetDataQualityRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataQualityRuleRequest.ProtoReflect.Descriptor instead.
func (*GetDataQualityRuleRequest) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{10}
}

func (x *GetDataQualityRuleRequest) GetAuth() *common.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GetDataQualityRuleRequest) GetRuleSetId() string {
	if x != nil {
		return x.RuleSetId
	}
	return ""
}

func (x *GetDataQualityRuleRequest) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

type GetDataQualityRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	Rule   *common.Rule   `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *GetDataQualityRuleResponse) Reset() {
	*x = GetDataQualityRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataQualityRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataQualityRuleResponse) ProtoMessage() {}

func (x *GetDataQualityRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataQualityRuleResponse.ProtoReflect.Descriptor instead.
func (*GetDataQualityRuleResponse) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{11}
}

func (x *GetDataQualityRuleResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetDataQualityRuleResponse) GetRule() *common.Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type CreateDataQualityRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Every gRPC request must have a valid auth config
	Auth      *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	RuleSetId string       `protobuf:"bytes,1,opt,name=rule_set_id,json=ruleSetId,proto3" json:"rule_set_id,omitempty"`
	Rule      *common.Rule `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *CreateDataQualityRuleRequest) Reset() {
	*x = CreateDataQualityRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataQualityRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataQualityRuleRequest) ProtoMessage() {}

func (x *CreateDataQualityRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataQualityRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateDataQualityRuleRequest) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{12}
}

func (x *CreateDataQualityRuleRequest) GetAuth() *common.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CreateDataQualityRuleRequest) GetRuleSetId() string {
	if x != nil {
		return x.RuleSetId
	}
	return ""
}

func (x *CreateDataQualityRuleRequest) GetRule() *common.Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type CreateDataQualityRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	Id     string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateDataQualityRuleResponse) Reset() {
	*x = CreateDataQualityRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataQualityRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataQualityRuleResponse) ProtoMessage() {}

func (x *CreateDataQualityRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataQualityRuleResponse.ProtoReflect.Descriptor instead.
func (*CreateDataQualityRuleResponse) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{13}
}

func (x *CreateDataQualityRuleResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CreateDataQualityRuleResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateDataQualityRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Every gRPC request must have a valid auth config
	Auth      *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	RuleSetId string       `protobuf:"bytes,1,opt,name=rule_set_id,json=ruleSetId,proto3" json:"rule_set_id,omitempty"`
	RuleId    string       `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Rule      *common.Rule `protobuf:"bytes,3,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *UpdateDataQualityRuleRequest) Reset() {
	*x = UpdateDataQualityRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDataQualityRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataQualityRuleRequest) ProtoMessage() {}

func (x *UpdateDataQualityRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataQualityRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateDataQualityRuleRequest) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateDataQualityRuleRequest) GetAuth() *common.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *UpdateDataQualityRuleRequest) GetRuleSetId() string {
	if x != nil {
		return x.RuleSetId
	}
	return ""
}

func (x *UpdateDataQualityRuleRequest) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *UpdateDataQualityRuleRequest) GetRule() *common.Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type UpdateDataQualityRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateDataQualityRuleResponse) Reset() {
	*x = UpdateDataQualityRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDataQualityRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDataQualityRuleResponse) ProtoMessage() {}

func (x *UpdateDataQualityRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDataQualityRuleResponse.ProtoReflect.Descriptor instead.
func (*UpdateDataQualityRuleResponse) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateDataQualityRuleResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type DeleteDataQualityRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Every gRPC request must have a valid auth config
	Auth      *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	RuleSetId string       `protobuf:"bytes,1,opt,name=rule_set_id,json=ruleSetId,proto3" json:"rule_set_id,omitempty"`
	RuleId    string       `protobuf:"bytes,2,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
}

func (x *DeleteDataQualityRuleRequest) Reset() {
	*x = DeleteDataQualityRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDataQualityRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataQualityRuleRequest) ProtoMessage() {}

func (x *DeleteDataQualityRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDataQualityRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteDataQualityRuleRequest) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteDataQualityRuleRequest) GetAuth() *common.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *DeleteDataQualityRuleRequest) GetRuleSetId() string {
	if x != nil {
		return x.RuleSetId
	}
	return ""
}

func (x *DeleteDataQualityRuleRequest) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

type DeleteDataQualityRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteDataQualityRuleResponse) Reset() {
	*x = DeleteDataQualityRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDataQualityRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDataQualityRuleResponse) ProtoMessage() {}

func (x *DeleteDataQualityRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDataQualityRuleResponse.ProtoReflect.Descriptor instead.
func (*DeleteDataQualityRuleResponse) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteDataQualityRuleResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type SendRuleNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Every gRPC request must have a valid auth config
	Auth      *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	Data      []byte       `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	RulesetId string       `protobuf:"bytes,2,opt,name=ruleset_id,json=rulesetId,proto3" json:"ruleset_id,omitempty"`
	RuleId    string       `protobuf:"bytes,3,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
}

func (x *SendRuleNotificationRequest) Reset() {
	*x = SendRuleNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRuleNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRuleNotificationRequest) ProtoMessage() {}

func (x *SendRuleNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRuleNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendRuleNotificationRequest) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{18}
}

func (x *SendRuleNotificationRequest) GetAuth() *common.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SendRuleNotificationRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SendRuleNotificationRequest) GetRulesetId() string {
	if x != nil {
		return x.RulesetId
	}
	return ""
}

func (x *SendRuleNotificationRequest) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

type SendRuleNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SendRuleNotificationResponse) Reset() {
	*x = SendRuleNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRuleNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRuleNotificationResponse) ProtoMessage() {}

func (x *SendRuleNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRuleNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendRuleNotificationResponse) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{19}
}

func (x *SendRuleNotificationResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type PublishMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Every gRPC request must have a valid auth config
	Auth    *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	Counter string       `protobuf:"bytes,1,opt,name=counter,proto3" json:"counter,omitempty"`
	Value   float64      `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PublishMetricsRequest) Reset() {
	*x = PublishMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishMetricsRequest) ProtoMessage() {}

func (x *PublishMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishMetricsRequest.ProtoReflect.Descriptor instead.
func (*PublishMetricsRequest) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{20}
}

func (x *PublishMetricsRequest) GetAuth() *common.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *PublishMetricsRequest) GetCounter() string {
	if x != nil {
		return x.Counter
	}
	return ""
}

func (x *PublishMetricsRequest) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PublishMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PublishMetricsResponse) Reset() {
	*x = PublishMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ps_dataquality_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishMetricsResponse) ProtoMessage() {}

func (x *PublishMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ps_dataquality_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishMetricsResponse.ProtoReflect.Descriptor instead.
func (*PublishMetricsResponse) Descriptor() ([]byte, []int) {
	return file_ps_dataquality_proto_rawDescGZIP(), []int{21}
}

func (x *PublishMetricsResponse) GetStatus() *common.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_ps_dataquality_proto protoreflect.FileDescriptor

var file_ps_dataquality_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x1b,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6a,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c,
	0x65, 0x53, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a,
	0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x53, 0x65,
	0x74, 0x73, 0x22, 0x58, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x82, 0x01, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31,
	0x0a, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x53, 0x65,
	0x74, 0x22, 0x7e, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x8f, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x31,
	0x0a, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x53, 0x65,
	0x74, 0x22, 0x62, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x51,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x07, 0x72,
	0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x22, 0x52, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5b, 0x0a, 0x1f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7e, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x75, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75,
	0x6c, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x8f, 0x4e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1e, 0x0a,
	0x0b, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x5f, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x72,
	0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x75, 0x6c, 0x65, 0x22, 0x4f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x8f,
	0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x12, 0x1e, 0x0a, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x1d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x1b, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6c, 0x65,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0x4e, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x71, 0x0a, 0x15, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x8f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x36, 0x5a,
	0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x63, 0x6f, 0x72, 0x70, 0x2f, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2d, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ps_dataquality_proto_rawDescOnce sync.Once
	file_ps_dataquality_proto_rawDescData = file_ps_dataquality_proto_rawDesc
)

func file_ps_dataquality_proto_rawDescGZIP() []byte {
	file_ps_dataquality_proto_rawDescOnce.Do(func() {
		file_ps_dataquality_proto_rawDescData = protoimpl.X.CompressGZIP(file_ps_dataquality_proto_rawDescData)
	})
	return file_ps_dataquality_proto_rawDescData
}

var file_ps_dataquality_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_ps_dataquality_proto_goTypes = []interface{}{
	(*GetDataQualityRuleSetsRequest)(nil),    // 0: protos.GetDataQualityRuleSetsRequest
	(*GetDataQualityRuleSetsResponse)(nil),   // 1: protos.GetDataQualityRuleSetsResponse
	(*GetDataQualityRuleSetRequest)(nil),     // 2: protos.GetDataQualityRuleSetRequest
	(*GetDataQualityRuleSetResponse)(nil),    // 3: protos.GetDataQualityRuleSetResponse
	(*CreateDataQualityRuleSetRequest)(nil),  // 4: protos.CreateDataQualityRuleSetRequest
	(*CreateDataQualityRuleSetResponse)(nil), // 5: protos.CreateDataQualityRuleSetResponse
	(*UpdateDataQualityRuleSetRequest)(nil),  // 6: protos.UpdateDataQualityRuleSetRequest
	(*UpdateDataQualityRuleSetResponse)(nil), // 7: protos.UpdateDataQualityRuleSetResponse
	(*DeleteDataQualityRuleSetRequest)(nil),  // 8: protos.DeleteDataQualityRuleSetRequest
	(*DeleteDataQualityRuleSetResponse)(nil), // 9: protos.DeleteDataQualityRuleSetResponse
	(*GetDataQualityRuleRequest)(nil),        // 10: protos.GetDataQualityRuleRequest
	(*GetDataQualityRuleResponse)(nil),       // 11: protos.GetDataQualityRuleResponse
	(*CreateDataQualityRuleRequest)(nil),     // 12: protos.CreateDataQualityRuleRequest
	(*CreateDataQualityRuleResponse)(nil),    // 13: protos.CreateDataQualityRuleResponse
	(*UpdateDataQualityRuleRequest)(nil),     // 14: protos.UpdateDataQualityRuleRequest
	(*UpdateDataQualityRuleResponse)(nil),    // 15: protos.UpdateDataQualityRuleResponse
	(*DeleteDataQualityRuleRequest)(nil),     // 16: protos.DeleteDataQualityRuleRequest
	(*DeleteDataQualityRuleResponse)(nil),    // 17: protos.DeleteDataQualityRuleResponse
	(*SendRuleNotificationRequest)(nil),      // 18: protos.SendRuleNotificationRequest
	(*SendRuleNotificationResponse)(nil),     // 19: protos.SendRuleNotificationResponse
	(*PublishMetricsRequest)(nil),            // 20: protos.PublishMetricsRequest
	(*PublishMetricsResponse)(nil),           // 21: protos.PublishMetricsResponse
	(*common.Auth)(nil),                      // 22: protos.common.Auth
	(*common.Status)(nil),                    // 23: protos.common.Status
	(*common.RuleSet)(nil),                   // 24: protos.common.RuleSet
	(*common.Rule)(nil),                      // 25: protos.common.Rule
}
var file_ps_dataquality_proto_depIdxs = []int32{
	22, // 0: protos.GetDataQualityRuleSetsRequest.auth:type_name -> protos.common.Auth
	23, // 1: protos.GetDataQualityRuleSetsResponse.status:type_name -> protos.common.Status
	24, // 2: protos.GetDataQualityRuleSetsResponse.rule_sets:type_name -> protos.common.RuleSet
	22, // 3: protos.GetDataQualityRuleSetRequest.auth:type_name -> protos.common.Auth
	23, // 4: protos.GetDataQualityRuleSetResponse.status:type_name -> protos.common.Status
	24, // 5: protos.GetDataQualityRuleSetResponse.rule_set:type_name -> protos.common.RuleSet
	22, // 6: protos.CreateDataQualityRuleSetRequest.auth:type_name -> protos.common.Auth
	24, // 7: protos.CreateDataQualityRuleSetRequest.rule_set:type_name -> protos.common.RuleSet
	23, // 8: protos.CreateDataQualityRuleSetResponse.status:type_name -> protos.common.Status
	22, // 9: protos.UpdateDataQualityRuleSetRequest.auth:type_name -> protos.common.Auth
	24, // 10: protos.UpdateDataQualityRuleSetRequest.rule_set:type_name -> protos.common.RuleSet
	23, // 11: protos.UpdateDataQualityRuleSetResponse.status:type_name -> protos.common.Status
	22, // 12: protos.DeleteDataQualityRuleSetRequest.auth:type_name -> protos.common.Auth
	23, // 13: protos.DeleteDataQualityRuleSetResponse.status:type_name -> protos.common.Status
	22, // 14: protos.GetDataQualityRuleRequest.auth:type_name -> protos.common.Auth
	23, // 15: protos.GetDataQualityRuleResponse.status:type_name -> protos.common.Status
	25, // 16: protos.GetDataQualityRuleResponse.rule:type_name -> protos.common.Rule
	22, // 17: protos.CreateDataQualityRuleRequest.auth:type_name -> protos.common.Auth
	25, // 18: protos.CreateDataQualityRuleRequest.rule:type_name -> protos.common.Rule
	23, // 19: protos.CreateDataQualityRuleResponse.status:type_name -> protos.common.Status
	22, // 20: protos.UpdateDataQualityRuleRequest.auth:type_name -> protos.common.Auth
	25, // 21: protos.UpdateDataQualityRuleRequest.rule:type_name -> protos.common.Rule
	23, // 22: protos.UpdateDataQualityRuleResponse.status:type_name -> protos.common.Status
	22, // 23: protos.DeleteDataQualityRuleRequest.auth:type_name -> protos.common.Auth
	23, // 24: protos.DeleteDataQualityRuleResponse.status:type_name -> protos.common.Status
	22, // 25: protos.SendRuleNotificationRequest.auth:type_name -> protos.common.Auth
	23, // 26: protos.SendRuleNotificationResponse.status:type_name -> protos.common.Status
	22, // 27: protos.PublishMetricsRequest.auth:type_name -> protos.common.Auth
	23, // 28: protos.PublishMetricsResponse.status:type_name -> protos.common.Status
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_ps_dataquality_proto_init() }
func file_ps_dataquality_proto_init() {
	if File_ps_dataquality_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ps_dataquality_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataQualityRuleSetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataQualityRuleSetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataQualityRuleSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataQualityRuleSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDataQualityRuleSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDataQualityRuleSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataQualityRuleSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataQualityRuleSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDataQualityRuleSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDataQualityRuleSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataQualityRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataQualityRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDataQualityRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDataQualityRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataQualityRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDataQualityRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDataQualityRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDataQualityRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRuleNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRuleNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ps_dataquality_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ps_dataquality_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ps_dataquality_proto_goTypes,
		DependencyIndexes: file_ps_dataquality_proto_depIdxs,
		MessageInfos:      file_ps_dataquality_proto_msgTypes,
	}.Build()
	File_ps_dataquality_proto = out.File
	file_ps_dataquality_proto_rawDesc = nil
	file_ps_dataquality_proto_goTypes = nil
	file_ps_dataquality_proto_depIdxs = nil
}
